services:
  authentication:
    build:
      context: ./authentication
      dockerfile: Dockerfile
    container_name: authentication_service
    ports:
      - ":5000"  # Porta esterna (host) 5001 mappata sulla porta interna del container 5000
    volumes:
      - sqldata1:/data  # Volume sqldata1 montato all'interno della cartella /data nel container
    environment:
      FLASK_ENV: development
    networks:
      - user-network
      - admin-network

  gacha_service:
    build:
      context: ./gacha_service
      dockerfile: Dockerfile
    container_name: gacha_service
    ports:
      - ":5000"  # Porta esterna (host) 5002 mappata sulla porta interna del container 5000
    volumes:
      - sqldata2_GachaManager:/data  # Volume sqldata2_GM montato all'interno della cartella /data nel container
    environment:
      FLASK_ENV: development
    depends_on:
      - authentication
    networks:
      - user-network
      - admin-network

  gacha_market_service:
    build:
      context: ./gacha_market_service
      dockerfile: Dockerfile
    container_name: gacha_market_service
    ports:
      - ":5000"  # Porta esterna (host) 5003 mappata sulla porta interna del container 5000
    volumes:
      - sqldata3_GachaMarket:/data  # Volume sqldata2_GM montato all'interno della cartella /data nel container
      - ./images:/app/images
    environment:
      FLASK_ENV: development
    depends_on:
      - authentication
      - gacha_service
    networks:
      - user-network

  auction_service:
    build:
      context: ./auction_service
      dockerfile: Dockerfile
    container_name: auction_service
    ports:
      - ":5000"  # Porta esterna (host) 5004 mappata sulla porta interna del container 5000
    volumes:
      - sqldata4_Auctions:/data  
    environment:
      FLASK_ENV: development
    depends_on:
      - authentication
      - gacha_service
      - gacha_market_service
    networks:
      - user-network


  nginx:
    image: nginx:latest
    container_name: nginx_gateway
    ports:
      - "443:443"
      - "80:80"  # Porta esterna (host) 80 mappata sulla porta interna del container 80
    volumes:
      - ./nginx:/etc/nginx/conf.d  # Associa il file di configurazione di Nginx
      - ./nginx/ssl:/etc/nginx/ssl        
    depends_on:
      - authentication
      - gacha_service
      - gacha_market_service
      - auction_service
    networks:
      - user-network
    
## ADMIN ##
  admin_service:
    build:
      context: ./admin_service
      dockerfile: Dockerfile
    container_name: admin_service
    ports:
      - "5004:5000"  # Porta esterna (host) 5003 mappata sulla porta interna del container 5000
    volumes:
      - sqldata4_admin_service:/data  # Volume sqldata2_GM montato all'interno della cartella /data nel container
    environment:
      FLASK_ENV: development
    depends_on:
      - authentication
      - gacha_service
      #- gacha_market_service
      - auction_service
    networks:
      - admin-network
## FINE ADMIN ##


volumes:
  sqldata1:
    driver: local
  sqldata2_GachaManager:
    driver: local
  sqldata3_GachaMarket:
    driver: local
  sqldata4_Auctions:
    driver: local
  sqldata4_admin_service:
    driver: local


networks:
  user-network:
    driver: bridge
  admin-network:
    driver: bridge
 # test-network:
#   driver: bridge