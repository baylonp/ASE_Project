{
  "openapi": "3.0.0",
  "info": {
    "title": "Gacha Collection Project - The Dubliners",
    "description": "Specifiche API del progetto divise per microservizi.",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "GitHub project repository",
    "url": "https://github.com/baylonp/ASE_Project"
  },
  "servers": [
    {
      "url": "https://localhost"
    },
    {
      "url": "https://localhost:444"
    }
  ],
  "tags": [
    {
      "name": "Admin Service",
      "description": "Admin management",
      "externalDocs": {
        "description": "GitHub repo",
        "url": "https://github.com/baylonp/ASE_Project/tree/test/gachas/admin_service"
      }
    },
    {
      "name": "Authentication Service",
      "description": "Account management",
      "externalDocs": {
        "description": "GitHub repo",
        "url": "https://github.com/baylonp/ASE_Project/tree/test/gachas/authentication"
      }
    },
    {
      "name": "Gacha Service",
      "description": "Gacha management",
      "externalDocs": {
        "description": "GitHub repo",
        "url": "https://github.com/baylonp/ASE_Project/tree/test/gachas/gacha_service"
      }
    },
    {
      "name": "Gacha Market Service",
      "description": "Market management",
      "externalDocs": {
        "description": "GitHub repo",
        "url": "https://github.com/baylonp/ASE_Project/tree/test/gachas/gacha_market_service"
      }
    },
    {
      "name": "Gacha Auction Service",
      "description": "Auction management",
      "externalDocs": {
        "description": "GitHub repo",
        "url": "https://github.com/baylonp/ASE_Project/tree/test/gachas/auction_service"
      }
    }
  ],
  "paths": {
    "/admin_service/auth": {
      "post": {
        "tags": [
          "Admin Service"
        ],
        "summary": "Login Admin",
        "description": "Authenticates an admin and generate a token JWT.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "invalidInput": {
                          "value": "Invalid input data"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin_service/logout": {
      "patch": {
        "tags": [
          "Admin Service"
        ],
        "summary": "Admin Logout",
        "description": "Logs out an admin by clearing the associated JWT token.",
        "parameters": [
          {
            "name": "adminId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the admin to log out."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Admin successfully logged out.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    },
                    "adminId": {
                      "type": "string",
                      "description": "The ID of the admin who has been logged out."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Admin ID is missing in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Admin ID is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden Token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Admin not found in the database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Admin not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin_service/adminId": {
      "get": {
        "tags": [
          "Admin Service"
        ],
        "summary": "Get Admin ID",
        "description": "Retrieves the ID of an admin by their username.",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The username of the admin whose ID is being retrieved."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Admin ID retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adminId": {
                      "type": "string",
                      "description": "The unique ID of the admin."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Username is missing in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Username is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden Token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Admin not found in the database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Admin not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin_service/verify_admin": {
      "get": {
        "tags": [
          "Admin Service"
        ],
        "summary": "Verify Admin",
        "description": "Verify if the user is an admin",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Something happened on Admin Token Vaerification.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request. Something happened on Admin Token Vaerification."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is invalid/expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is invlaid/expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin_service/user_info/{playerId}": {
      "get": {
        "tags": [
          "Admin Service"
        ],
        "summary": "User Info",
        "description": "Retrieve user info.",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User info retrieved succesfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique ID of the player.",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "description": "The username of the player.",
                      "example": "player123"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email address of the player.",
                      "example": "player123@example.com"
                    },
                    "wallet": {
                      "type": "integer",
                      "description": "The current wallet balance of the player.",
                      "example": 500
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is invalid/expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is invlaid/expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden Token"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Player not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while communicating with the authentication service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while communicating with the authentication service"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Authentication service is temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin_service/gachas/{gacha_id}": {
      "patch": {
        "tags": [
          "Admin Service"
        ],
        "summary": "Update gacha",
        "description": "Update a gacha in the catalog & in the collection of all the users.",
        "parameters": [
          {
            "name": "gacha_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gacha uploaded succesfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "invalidInput": {
                          "value": "Invalid input data"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is invalid/expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is invlaid/expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden Token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while communicating with the gacha market or gacha service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while communicating with the gacha market or gacha service"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Gacha market service is temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha market service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Service"
        ],
        "summary": "Delete gacha",
        "description": "Delete a gacha in the catalog & in the collection of all the users.",
        "parameters": [
          {
            "name": "gacha_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gacha removed succesfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "invalidInput": {
                          "value": "Invalid input data"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is invalid/expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is invlaid/expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden Token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Forbidden Token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while communicating with the gacha market or gacha service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while communicating with the gacha market or gacha service"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Gacha market service is temporarily unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha market service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin_service/all_collections": {
      "get": {
        "tags": [
          "Admin Service"
        ],
        "summary": "Retrieve All Gacha Collections",
        "description": "Allows the admin to retrieve all Gacha collections stored in the gacha_service database.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication and authorization."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Gacha collections.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collectionId": {
                        "type": "string",
                        "description": "The unique identifier for the Gacha collection."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the Gacha collection."
                      },
                      "description": {
                        "type": "string",
                        "description": "A brief description of the collection."
                      },
                      "items": {
                        "type": "array",
                        "description": "A list of items in the collection.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "itemId": {
                              "type": "string",
                              "description": "The unique identifier of the item."
                            },
                            "itemName": {
                              "type": "string",
                              "description": "The name of the item."
                            },
                            "rarity": {
                              "type": "string",
                              "description": "The rarity level of the item."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Gacha collections found in the gacha_service database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Gacha collections found."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The provided JWT token is invalid or missing.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while communicating with the gacha_service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while communicating with the gacha service [error details]."
                    }
                  }
                }
              }
            }
          },
          "504": {
            "description": "The request to gacha_service timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The request to gacha_service timed out."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin_service/gachas": {
      "post": {
        "tags": [
          "Admin Service"
        ],
        "summary": "Add New Gacha to Catalog",
        "description": "Allows administrators to add a new Gacha to the catalog through the gacha_market_service.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication and authorization."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pilot_name": {
                    "type": "string",
                    "description": "The name of the pilot associated with the Gacha."
                  },
                  "rarity": {
                    "type": "string",
                    "description": "The rarity level of the Gacha."
                  },
                  "experience": {
                    "type": "integer",
                    "description": "The experience points required or associated with the Gacha."
                  },
                  "ability": {
                    "type": "string",
                    "description": "The special ability or feature of the Gacha."
                  }
                },
                "required": [
                  "pilot_name",
                  "rarity",
                  "experience",
                  "ability"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Gacha added successfully to the catalog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data provided in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while communicating with the gacha_market_service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while communicating with the gacha_market_service [error details]"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The request to the gacha_market_service timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The request to gacha_market_service timed out"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin_service/transactions/{userId}": {
      "get": {
        "tags": [
          "Admin Service"
        ],
        "summary": "Get User Transactions",
        "description": "Allows administrators to retrieve the transaction history of a specific user through the gacha_market_service.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the user whose transaction history is being retrieved."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "User transactions retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Id": {
                        "type": "string",
                        "description": "The unique ID of the transaction."
                      },
                      "user_id": {
                        "type": "string",
                        "description": "The ID of the user associated with the transaction."
                      },
                      "amount_spent": {
                        "type": "number",
                        "description": "The amount involved in the transaction."
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date and time of the transaction."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No transactions found for the specified user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No transactions found for this user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while communicating with the gacha_market_service.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while communicating with the gacha_market_service"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The request to gacha_market_service timed out.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The request to gacha_market_service timed out"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentication/validate": {
      "get": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "Validate JWT Token",
        "description": "Validates the JWT token provided in the request headers. Confirms whether the token is valid and usable.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token to be validated."
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ok."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Something went wrong during token verification.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request. Something happened on Token Verification."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Token is missing or invalid. Token has expired / Invalid token format or content.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Authentication Service has received an Invalid token / Token has expired / Invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentication/account": {
      "post": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "Create a new account",
        "description": "Registers a new user in the system. The user must provide a valid username, password, and email.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "A unique username",
                    "example": "user123"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password",
                    "example": "password123"
                  },
                  "email": {
                    "type": "string",
                    "description": "A valid email address",
                    "example": "user123@example.com"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Account created successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or username/email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "invalidInput": {
                          "value": "Invalid input data"
                        },
                        "invalidUsername": {
                          "value": "Invalid username format"
                        },
                        "invalidEmail": {
                          "value": "Invalid email format"
                        },
                        "usernameExists": {
                          "value": "Username already exists"
                        },
                        "emailExists": {
                          "value": "Email already exists"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "Delete an account",
        "description": "Deletes a user account based on the provided account ID.",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "The unique ID of the account to be deleted.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Account and associated Gacha collection deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Account ID is missing in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Account ID is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Account not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred [error details]"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Failed to delete Gacha collection from gacha_service due to a timeout.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to retrieve user information from authentication service"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "Update an account",
        "description": "Updates the details of a user account, such as username, password, or email, based on the provided account ID.",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "The unique ID of the account to be updated.",
            "schema": {
              "type": "integer",
              "example": null
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "New username for the account (must be unique).",
                    "example": "new_user123"
                  },
                  "password": {
                    "type": "string",
                    "description": "New password for the account.",
                    "example": "new_password123"
                  },
                  "email": {
                    "type": "string",
                    "description": "New email address for the account (must be unique).",
                    "example": "new_user123@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Account updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or duplicate username/email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "missingId": {
                          "value": "Account ID is required"
                        },
                        "invalidInput": {
                          "value": "Invalid input data"
                        },
                        "usernameExists": {
                          "value": "Username already exists"
                        },
                        "emailExists": {
                          "value": "Email already exists"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Account not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentication/auth": {
      "post": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "User login",
        "description": "Authenticates a user using their username and password. If successful, returns a session ID.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username of the account.",
                    "example": "user123"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the account.",
                    "example": "password123"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "token": {
                      "type": "string",
                      "description": "A unique token for the user."
                    },
                    "userId": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "invalidInput": {
                          "value": "Invalid input data"
                        },
                        "invalidUsername": {
                          "value": "Invalid username format"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentication/logout": {
      "patch": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "User Logout",
        "description": "Logs out a user by clearing the associated JWT token in the database.",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the account to log out."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged out.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    },
                    "userId": {
                      "type": "string",
                      "description": "The ID of the user who has been logged out."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Account ID is missing in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Account ID is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found in the database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during the logout operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentication/userId": {
      "get": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "Get user ID",
        "description": "Retrieves the user ID based on the provided username.",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "description": "The username of the user whose ID is being requested.",
            "schema": {
              "type": "string",
              "example": "user123"
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "User ID retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "description": "The unique ID of the user.",
                      "example": 42
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Username not provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Username is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentication/players/{playerId}": {
      "get": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "Get user information",
        "description": "Retrieves detailed information about a player based on their unique player ID.",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the player.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Player information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique ID of the player.",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "description": "The username of the player.",
                      "example": "player123"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email address of the player.",
                      "example": "player123@example.com"
                    },
                    "wallet": {
                      "type": "integer",
                      "description": "The current wallet balance of the player.",
                      "example": 500
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Player not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentication/players/{playerId}/currency/add": {
      "post": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "Add currency to player wallet",
        "description": "Adds a specified amount of in-game currency to the wallet of a player identified by their player ID.",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the player.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "description": "The amount of currency to add to the player's wallet. Must be greater than zero.",
            "schema": {
              "type": "number",
              "format": "float",
              "example": 50
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Currency added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Currency added successfully"
                    },
                    "new_wallet_balance": {
                      "type": "integer",
                      "description": "The updated wallet balance of the player.",
                      "example": 150
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or amount not greater than zero",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data, amount must be greater than zero"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized action. The current user is not authorized to modify this player's wallet.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "PlayerID Invalid. You are not authorized."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Player not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentication/players/{playerId}/currency/update": {
      "patch": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "Update player wallet balance",
        "description": "Updates the amount of currency in a player's wallet by adding or subtracting a specified amount.",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the player whose wallet is being updated.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount to add or subtract from the wallet. Can be positive or negative.",
                    "example": -50
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Wallet updated successfully"
                    },
                    "new_wallet_balance": {
                      "type": "integer",
                      "description": "The updated balance in the player's wallet.",
                      "example": 150
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or insufficient funds",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "invalidInput": {
                          "value": "Invalid input data amount field is required"
                        },
                        "insufficientFunds": {
                          "value": "Insufficient funds"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Player not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/authentication/players/{playerId}/currency/subtract": {
      "patch": {
        "tags": [
          "Authentication Service"
        ],
        "summary": "Sottrae valuta dal wallet del giocatore",
        "description": "Sottrae una quantità specificata di monete di gioco dal wallet di un giocatore specifico.",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "ID del giocatore",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Quantità di valuta da sottrarre (deve essere positiva)"
                  }
                },
                "required": [
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Wallet updated successfully"
                    },
                    "new_wallet_balance": {
                      "type": "number",
                      "format": "float",
                      "example": 50
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Insufficient found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "invalidInput": {
                          "value": "Invalid input data amount field is required"
                        },
                        "invalidAmount": {
                          "value": "Amount must be greater than zero"
                        },
                        "insufficientFunds": {
                          "value": "Insufficient funds"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Player not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gacha_service/players/{userID}/gachas": {
      "get": {
        "tags": [
          "Gacha Service"
        ],
        "summary": "Get player's gacha collection",
        "description": "Retrieves the gacha collection of a specific player based on their unique user ID.",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "description": "The unique ID of the player whose gacha collection is being retrieved.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Player's gacha collection retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "gachaId": {
                        "type": "integer",
                        "description": "The unique ID of the gacha.",
                        "example": 101
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the gacha.",
                        "example": "Legendary Pilot"
                      },
                      "rarity": {
                        "type": "string",
                        "description": "The rarity of the gacha.",
                        "example": "Legendary"
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "The user does not own any Gacha collection.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Player does not own any Gachas"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Player not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gacha Service"
        ],
        "summary": "Delete User's Gacha Collection",
        "description": "Deletes all Gacha associated with a specific user.",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the user whose Gacha collection is being deleted."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Gacha collection deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha collection deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Gacha collection found for the specified user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Gacha collection found for this user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gacha Service"
        ],
        "summary": "Add a gacha to a player's collection",
        "description": "Adds a new gacha to the collection of a specific player identified by their user ID.",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "description": "The unique ID of the player to whom the gacha will be added.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "The unique ID of the user",
                    "example": 1
                  },
                  "gacha_id": {
                    "type": "integer",
                    "description": "The unique ID of the gacha.",
                    "example": 101
                  },
                  "pilot_name": {
                    "type": "string",
                    "description": "The name of the gacha's pilot.",
                    "example": "Pilot A"
                  },
                  "rarity": {
                    "type": "string",
                    "description": "The rarity of the gacha.",
                    "example": "Legendary"
                  },
                  "experience": {
                    "type": "integer",
                    "description": "The experience level of the gacha.",
                    "example": 50
                  },
                  "ability": {
                    "type": "string",
                    "description": "The ability of the gacha.",
                    "example": "Stealth Mode"
                  }
                },
                "required": [
                  "gacha_id",
                  "pilot_name",
                  "rarity",
                  "experience",
                  "ability"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Gacha added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gacha_service/players/{userID}/gachas/{gachaId}": {
      "get": {
        "tags": [
          "Gacha Service"
        ],
        "summary": "Get details of a specific gacha",
        "description": "Retrieves the details of a specific gacha in a player's collection identified by the player ID and gacha ID.",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "description": "The unique ID of the player.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "gachaId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the gacha.",
            "schema": {
              "type": "integer",
              "example": 101
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Gacha details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gachaId": {
                      "type": "integer",
                      "description": "The unique ID of the gacha.",
                      "example": 101
                    },
                    "pilotName": {
                      "type": "string",
                      "description": "The name of the gacha's pilot.",
                      "example": "Pilot A"
                    },
                    "rarity": {
                      "type": "string",
                      "description": "The rarity of the gacha.",
                      "example": "Legendary"
                    },
                    "experience": {
                      "type": "integer",
                      "description": "The experience level of the gacha.",
                      "example": 50
                    },
                    "ability": {
                      "type": "string",
                      "description": "The ability of the gacha.",
                      "example": "Stealth Mode"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Gacha or player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha or player not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gacha_service/players/{userID}/gachas/missing": {
      "get": {
        "tags": [
          "Gacha Service"
        ],
        "summary": "Retrieve the list of gachas missing from a player's collection",
        "description": "Returns the list of gachas that are missing from a player's collection compared to the complete catalog available.",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the player whose missing gachas are being retrieved."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "List of missing gachas retrieved successfully or player has all gachas.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "gacha_id": {
                            "type": "integer",
                            "description": "Unique identifier for the missing gacha.",
                            "example": 101
                          },
                          "pilot_name": {
                            "type": "string",
                            "description": "Name of the missing pilot.",
                            "example": "Pilot A"
                          },
                          "rarity": {
                            "type": "string",
                            "description": "Rarity level of the missing pilot.",
                            "example": "Legendary"
                          },
                          "experience": {
                            "type": "integer",
                            "description": "Experience of the pilot",
                            "example": 50
                          },
                          "ability": {
                            "type": "string",
                            "description": "Ability of the pilot",
                            "example": "Stealth Mode"
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Message indicating the player has all gachas.",
                          "example": "Player has all gachas"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "No pilots available in the catalog",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No pilots available in the catalog"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to retrieve the gacha catalog from gacha_market_service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to retrieve the gacha catalog from gacha_market_service"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Gacha market service is temporarily unavailable due to a timeout.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gacha_service/players/{userID}/gachas/{gachaID}/update_owner": {
      "patch": {
        "tags": [
          "Gacha Service"
        ],
        "summary": "Update the ownership of a specific gacha",
        "description": "Updates the ownership of a specific gacha, typically used after a successful auction win to transfer the gacha to a new owner.",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the new owner (player) to whom the gacha will be assigned."
          },
          {
            "name": "gachaID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the gacha that is being transferred"
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Gacha ownership updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Confirmation message for successful ownership update.",
                      "example": "Gacha ownership updated successfully."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Gacha not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message indicating the gacha was not found.",
                      "example": "Gacha not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message for an internal server issue.",
                      "example": "An internal error occurred."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gacha_service/admin/update_all/{gacha_id}": {
      "patch": {
        "tags": [
          "Gacha Service"
        ],
        "summary": "Update Gacha for All Users",
        "description": "Updates the attributes of a specific Gacha for all users who own it.",
        "parameters": [
          {
            "name": "gacha_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the Gacha to be updated."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pilot_name": {
                    "type": "string",
                    "description": "The updated name of the pilot."
                  },
                  "rarity": {
                    "type": "string",
                    "description": "The updated rarity level of the Gacha."
                  },
                  "experience": {
                    "type": "number",
                    "description": "The updated experience points of the Gacha."
                  },
                  "ability": {
                    "type": "string",
                    "description": "The updated special ability of the Gacha."
                  }
                },
                "example": {
                  "pilot_name": "Pilot B",
                  "rarity": "Epic",
                  "experience": 7000,
                  "ability": "Enhanced Defense"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gacha updated for all users successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha updated for all users successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or missing fields in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. The user is not an admin.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Gacha found for the given gacha_id.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No gacha found for given gacha_id"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Authentication or admin service is temporarily unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gacha_service/admin/collections": {
      "get": {
        "tags": [
          "Gacha Service"
        ],
        "summary": "Get All Gacha Collections",
        "description": "Allows an admin to view the entire Gacha Collection database.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Gacha collections retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique ID of the Gacha entry.",
                        "example": 1
                      },
                      "user_id": {
                        "type": "integer",
                        "description": "The ID of the user who owns the Gacha.",
                        "example": 1
                      },
                      "gacha_id": {
                        "type": "integer",
                        "description": "The unique ID of the Gacha.",
                        "example": 101
                      },
                      "pilot_name": {
                        "type": "string",
                        "description": "The name of the pilot associated with the Gacha.",
                        "example": "Pilot A"
                      },
                      "rarity": {
                        "type": "string",
                        "description": "The rarity level of the Gacha.",
                        "example": "Legendary"
                      },
                      "experience": {
                        "type": "string",
                        "description": "The experience points of the Gacha.",
                        "example": 100
                      },
                      "ability": {
                        "type": "string",
                        "description": "The special ability of the Gacha.",
                        "example": "Stealth Mode"
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Gacha collections found in the database.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No Gacha collections found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. The user is not an admin.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The authentication or admin service is temporarily unavailable due to a timeout.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/market_service/admin/gachas/{gacha_id}": {
      "patch": {
        "tags": [
          "Gacha Market Service"
        ],
        "summary": "Update Gacha in Catalog",
        "description": "Updates the attributes of a specific Gacha in the catalog. Only accessible to admin users.",
        "parameters": [
          {
            "name": "gacha_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the Gacha to be updated."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pilot_name": {
                    "type": "string",
                    "description": "The updated name of the pilot associated with the Gacha."
                  },
                  "rarity": {
                    "type": "string",
                    "description": "The updated rarity level of the Gacha."
                  },
                  "experience": {
                    "type": "number",
                    "description": "The updated experience points of the Gacha."
                  },
                  "ability": {
                    "type": "string",
                    "description": "The updated special ability of the Gacha."
                  }
                },
                "example": {
                  "pilot_name": "Pilot A",
                  "rarity": "Legendary",
                  "experience": 9000,
                  "ability": "Enhanced Speed"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gacha updated successfully in the catalog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data or missing fields in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. The user is not an admin.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Gacha not found in the catalog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Authentication or admin service is temporarily unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gacha Market Service"
        ],
        "summary": "Remove Gacha from Catalog",
        "description": "Allows an administrator to remove a Gacha from the catalog.",
        "parameters": [
          {
            "name": "gacha_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The unique ID of the Gacha to be removed."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Gacha removed successfully from the catalog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha removed successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. The user is not an admin.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Gacha not found in the catalog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Authentication service is temporarily unavailable due to a timeout.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/market_service/admin/transactions/{userId}": {
      "get": {
        "tags": [
          "Gacha Market Service"
        ],
        "summary": "Get User Transactions for Admin",
        "description": "Allows administrators to view the transaction history for a specific user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the user whose transactions are being retrieved."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique ID of the transaction.",
                        "example": 1
                      },
                      "user_id": {
                        "type": "integer",
                        "description": "The ID of the user associated with the transaction.",
                        "example": 1
                      },
                      "amount_spent": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount spent in the transaction.",
                        "example": 500
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the transaction in ISO format."
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. The user is not an admin.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No transactions found for the specified user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No transactions found for this user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Authentication service is temporarily unavailable due to a timeout.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/market_service/admin/gachas": {
      "post": {
        "tags": [
          "Gacha Market Service"
        ],
        "summary": "Add New Gacha to Catalog",
        "description": "Allows an administrator to add a new Gacha to the catalog.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pilot_name": {
                    "type": "string",
                    "description": "The name of the pilot associated with the Gacha."
                  },
                  "rarity": {
                    "type": "string",
                    "description": "The rarity level of the Gacha."
                  },
                  "experience": {
                    "type": "number",
                    "description": "The experience points associated with the Gacha."
                  },
                  "ability": {
                    "type": "string",
                    "description": "The special ability or feature of the Gacha."
                  }
                },
                "required": [
                  "pilot_name",
                  "rarity",
                  "experience",
                  "ability"
                ],
                "example": {
                  "pilot_name": "Ace Pilot",
                  "rarity": "Legendary",
                  "experience": 5000,
                  "ability": "Double Attack"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Gacha added successfully to the catalog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha added successfully"
                    },
                    "gacha_id": {
                      "type": "integer",
                      "description": "The unique ID of the newly created Gacha.",
                      "example": 103
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data. Required fields are missing or incorrect.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. The user is not an admin.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred during the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Authentication service is temporarily unavailable due to a timeout.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/market_service/players/{userId}/transactions": {
      "get": {
        "tags": [
          "Gacha Market Service"
        ],
        "summary": "Get user transaction history",
        "description": "Retrieves the transaction history for a specific user identified by their user ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the user whose transactions are being retrieved.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique ID of the transaction.",
                        "example": 101
                      },
                      "user_id": {
                        "type": "integer",
                        "description": "The ID of the user who made the transaction.",
                        "example": 1
                      },
                      "amount_spent": {
                        "type": "number",
                        "format": "float",
                        "description": "The amount of money spent in the transaction.",
                        "example": 25.5
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the transaction.",
                        "example": "2024-11-17T10:15:30"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No transactions found for this user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No transactions found for this user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/market_service/players/{playerId}/currency/buy": {
      "post": {
        "tags": [
          "Gacha Market Service"
        ],
        "summary": "Purchase in-game currency",
        "description": "Buys in-game currency for a player's wallet. The purchased amount is added to the player's wallet, and a transaction record is created.",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the player making the purchase.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "description": "The amount of currency to purchase. Must be greater than zero.",
            "schema": {
              "type": "number",
              "format": "float",
              "example": null
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "In-game currency purchased successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "In-game currency purchased successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data Amount must be greater than zero"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Player not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error or communication error with the authentication service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "authServiceError": {
                          "value": "An error occurred while communicating with the auth service"
                        },
                        "internalError": {
                          "value": "An internal error occurred"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "502": {
            "description": "Failed to add currency due to service error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to add currency"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/market_service/players/{playerId}/gacha/roll": {
      "post": {
        "tags": [
          "Gacha Market Service"
        ],
        "summary": "Purchase a gacha roll",
        "description": "Allows the player to spend in-game currency to purchase a gacha roll and obtain a random pilot. The roll costs a fixed amount of in-game currency.",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "description": "The unique ID of the player purchasing the roll.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Roll purchased successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Roll purchased successfully"
                    },
                    "pilot": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique ID of the pilot obtained.",
                          "example": 101
                        },
                        "pilot_name": {
                          "type": "string",
                          "description": "The name of the obtained pilot.",
                          "example": "Legendary Pilot"
                        },
                        "rarity": {
                          "type": "string",
                          "description": "The rarity of the obtained pilot.",
                          "example": "Legendary"
                        },
                        "experience": {
                          "type": "integer",
                          "description": "The experience level of the obtained pilot.",
                          "example": 50
                        },
                        "ability": {
                          "type": "string",
                          "description": "The special ability of the obtained pilot.",
                          "example": "Stealth Mode"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not enough in-game currency to purchase a roll",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not enough in-game currency to purchase a roll"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found or no pilots available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "playerNotFound": {
                          "value": "Player not found"
                        },
                        "noPilotsAvailable": {
                          "value": "No pilots available"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error or communication error with services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "serviceError": {
                          "value": "An error occurred while communicating with the auth or gacha service"
                        },
                        "internalError": {
                          "value": "An internal error occurred"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Authentication or Gacha service is temporarily unavailable due to a timeout.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/market_service/catalog": {
      "get": {
        "tags": [
          "Gacha Market Service"
        ],
        "summary": "Retrieve the complete catalog of pilots (gachas)",
        "description": "Returns the complete catalog of all available pilots (gachas) in the system, including their details such as rarity, experience, and special abilities.",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "gacha_id": {
                        "type": "integer",
                        "description": "Unique identifier for the gacha.",
                        "example": 102
                      },
                      "pilot_name": {
                        "type": "string",
                        "description": "Name of the pilot.",
                        "example": "Pilot A"
                      },
                      "rarity": {
                        "type": "string",
                        "description": "Rarity level of the pilot.",
                        "example": "Legendary"
                      },
                      "experience": {
                        "type": "integer",
                        "description": "Experience level of the pilot.",
                        "example": 800
                      },
                      "ability": {
                        "type": "string",
                        "description": "Special ability of the pilot.",
                        "example": "Stealth Mode"
                      }
                    },
                    "required": [
                      "gacha_id",
                      "pilot_name",
                      "rarity"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No pilots available in the catalog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No pilots available in the catalog."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auction_service/auctions/active": {
      "get": {
        "tags": [
          "Gacha Auction Service"
        ],
        "summary": "Get active auctions",
        "description": "Retrieves a list of all active auctions currently available.",
        "responses": {
          "200": {
            "description": "Active auctions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "auction_id": {
                        "type": "integer",
                        "description": "The unique ID of the auction.",
                        "example": 1
                      },
                      "gacha_id": {
                        "type": "integer",
                        "description": "The unique ID of the gacha being auctioned.",
                        "example": 101
                      },
                      "issuer_id": {
                        "type": "integer",
                        "description": "The ID of the user who issued the auction.",
                        "example": 55
                      },
                      "current_user_winner_id": {
                        "type": "integer",
                        "description": "The ID of the user currently winning the auction.",
                        "example": 3
                      },
                      "current_bid": {
                        "type": "number",
                        "format": "float",
                        "description": "The current highest bid for the auction.",
                        "example": 150
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp indicating when the auction started.",
                        "example": "2024-11-17T12:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No active auctions found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No active auctions found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An internal error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auction_service/players/{userId}/setAuction": {
      "post": {
        "tags": [
          "Gacha Auction Service"
        ],
        "summary": "Create a new auction",
        "description": "Allows a user to auction one of their gacha items. The auction will last for a specified time (default is 1 minute).",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique ID of the user setting the auction."
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gacha_id": {
                    "type": "integer",
                    "description": "The unique ID of the gacha being auctioned.",
                    "example": 101
                  },
                  "base_price": {
                    "type": "number",
                    "format": "float",
                    "description": "The starting price of the auction.",
                    "example": 50
                  }
                },
                "required": [
                  "gacha_id",
                  "base_price"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Auction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Auction created successfully"
                    },
                    "auction_id": {
                      "type": "integer",
                      "description": "The unique ID of the newly created auction.",
                      "example": 2001
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Gacha not found or not owned by user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha not found or not owned by user"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error or communication error with gacha service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "serviceError": {
                          "value": "An error occurred while communicating with the gacha service"
                        },
                        "internalError": {
                          "value": "An internal error occurred"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Gacha service is temporarily unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Gacha service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auction_service/auctions/{auctionID}/bid": {
      "post": {
        "tags": [
          "Gacha Auction Service"
        ],
        "summary": "Place a bid on an auction",
        "description": "Allows a user to place a bid on a specific auction.",
        "parameters": [
          {
            "name": "auctionID",
            "in": "path",
            "description": "The ID of the auction to place a bid on",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-access-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The JWT token used for authentication."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "The ID of the user placing the bid"
                  },
                  "bid_amount": {
                    "type": "number",
                    "format": "float",
                    "description": "The bid amount (must be higher than the current bid)"
                  }
                },
                "required": [
                  "user_id",
                  "bid_amount"
                ],
                "example": {
                  "bid_amount": 500,
                  "user_id": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bid placed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bid placed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, auction is not active, insufficient funds, or bid amount is too low",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": {
                        "invalidAuctionId": {
                          "value": "AuctionId must be a positive number"
                        },
                        "invaludInput": {
                          "value": "Invalid input data"
                        },
                        "amountError": {
                          "value": "Amount must be a positive number"
                        },
                        "invalidUser": {
                          "value": "User_id must be a positive number"
                        },
                        "bidError": {
                          "value": "Bid amount must be higher than the current bid"
                        },
                        "insufficientFounds": {
                          "value": "insufficientFounds"
                        },
                        "auctionActive": {
                          "value": "Auction is no longer active"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Token is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Auction not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Auction not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error or issues communicating with external services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while communicating with other services"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Authentication service is temporarily unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Authentication service is temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}